C51 COMPILER V9.53.0.0   TEMP                                                              11/19/2023 21:35:27 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN .\Objects\temp.obj
COMPILER INVOKED BY: D:\DWIN\Keil_v5\C51\BIN\C51.EXE source\temp.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\driver;.\sour
                    -ce) DEBUG OBJECTEXTEND CODE SYMBOLS PRINT(.\Listings\temp.lst) OBJECT(.\Objects\temp.obj)

line level    source

   1          #include "temp.h"
   2          #include "sys.h"
   3          #include "string.h"
   4          #include "drawing.h"
   5          
   6          
   7          const u8 LINE_HIGHT   = 13;//px
   8          const u8 LINE_WIDTH   = 150;//px
   9          const u8 LEVEL_HEIGHT = 120;//px
  10          const u8 TOUCH_HEIGHT = 100;//px
  11          const u16 TIME_Y_LEVEL = 800 - 230;
  12          
  13          typedef enum { //–¥–ª—è id –∫–∞—Ä—Ç–∏–Ω–æ–∫ //–Ω–µ –∞–¥—Ä–µ—Å–∞—Ü–∏–∏ –≤ —Å–ø–∏—Å–∫–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  14              EIID_TIG,       EIID_TIG_SPOT, EIID_MMA,
  15              EIID_AC,        EIID_AC_MIX,   EIID_DC_MINUS, EIID_DC_PLUS,
  16              EIID_2T,        EIID_4T,       EIID_4T_PLUS,
  17              EIID_HF,        EIID_LIFT,
  18              EIID_PULSE_OFF, EIID_PULSE_ON,
  19              EIID_D_10,      EIID_D_16,     EIID_D_20,     EIID_D_24, EIID_D_32, EIID_D_40,
  20              EIID_SIN,       EIID_TRIG,     EIID_RECT,     EIID_TRAP,
  21              EIID_H2O_ON,    EIID_H2O_OFF,
  22              
  23              EIID_PRE_FLOW_T1,  //–¢1  –≤—Ä–µ–º—è –ø—Ä–µ–¥–≤. –ø—Ä–æ–¥—É–≤–∫–∏, —Å
  24              EIID_START_I1,     //I1  –Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–æ–∫, –ê
  25              EIID_START_T2,     //T2  –≤—Ä–µ–º—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ç–æ–∫–∞, c
  26              EIID_UP_T3,        //–¢3  –≤—Ä–µ–º—è –Ω–∞—Ä–∞—Å—Ç–∞–Ω–∏—è, —Å
  27              EIID_BASE_I2,      //I2  —Å–≤–∞—Ä–æ—á–Ω—ã–π —Ç–æ–∫ (—Ç–æ–∫ –±–∞–∑—ã), –ê
  28              EIID_BASE_T4,      //–¢4  –≤—Ä–µ–º—è —Ç–æ–∫–∞ –±–∞–∑—ã, —Å
  29              EIID_IMPULSE_I3,   //I3  –∏–º–ø—É–ª—å—Å–Ω—ã–π —Ç–æ–∫, –ê
  30              EIID_IMPULSE_T5,   //–¢5  –≤—Ä–µ–º—è —Ç–æ–∫–∞ –∏–º–ø—É–ª—å—Å–∞, —Å
  31              EIID_FREQ_F1,      //F1  —á–∞—Å—Ç–æ—Ç–∞, –ì—Ü
  32              EIID_BALANCE_D1,   //D1  –±–∞–ª–∞–Ω—Å *
  33              EIID_DOWN_T6,      //–¢6  –≤—Ä–µ–º—è —Å–ø–∞–¥–∞, —Å
  34              EIID_END_I4,       //I4  —Ç–æ–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–≤–∞—Ä–∫–∏, –ê
  35              EIID_END_T7,       //T7  –≤—Ä–µ–º—è –∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ç–æ–∫–∞, —Å
  36              EIID_POST_FLOW_T8, //–¢8  –≤—Ä–µ–º—è –ø—Ä–æ–¥—É–≤–∫–∏ –≤ –∫–æ–Ω—Ü–µ, —Å
  37              EIDD_KZ_I5,        //I5  —Ç–æ–∫ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –∑–∞–º—ã–∫–∞–Ω–∏—è, %
  38              EIID_BASE2_I2X,    //I2—Ö –≤—Ç–æ—Ä–æ–π —Ç–æ–∫ –±–∞–∑—ã (—Ç–æ–ª—å–∫–æ –≤ 4–¢+), –ê
  39          };
  40          
  41          enum {
  42              MEN_WELD_MOD, 
  43              MEN_BTN_MOD,
  44              MEN_POL_MOD, 
  45              MEN_IGN_MOD,
  46              MEN_PLS_MOD,
  47              MEN_PLS_WAVE_SHAPE_MOD,  
  48              MEN_D_MOD,   
  49              MEN_FLOW_MOD,
  50          };
  51          
  52          enum {
  53              TIG,
  54              TIG_SPOT,
C51 COMPILER V9.53.0.0   TEMP                                                              11/19/2023 21:35:27 PAGE 2   

  55              MMA,
  56          };
  57          
  58          code const u32 active_items[] = {
  59              ((u32)1 << EIID_TIG)       | ((u32)1 << EIID_TIG_SPOT) | ((u32)1 << EIID_MMA)      |
  60              ((u32)1 << EIID_2T)        | ((u32)1 << EIID_4T)       | ((u32)1 << EIID_4T_PLUS)  |
  61              ((u32)1 << EIID_AC)        | ((u32)1 << EIID_AC_MIX)   | ((u32)1 << EIID_DC_MINUS) |
  62              ((u32)1 << EIID_HF)        | ((u32)1 << EIID_LIFT)     |
  63              ((u32)1 << EIID_PULSE_OFF) | ((u32)1 << EIID_PULSE_ON) |
  64              ((u32)1 << EIID_SIN)       | ((u32)1 << EIID_TRIG)     | ((u32)1 << EIID_RECT)     | ((u32)1 << EIID_T
             -RAP) |
  65              ((u32)1 << EIID_D_10)      | ((u32)1 << EIID_D_16)     | ((u32)1 << EIID_D_20)     | ((u32)1 << EIID_D
             -_24) | ((u32)1 << EIID_D_32) | ((u32)1 << EIID_D_40) |
  66              ((u32)1 << EIID_H2O_OFF)   | ((u32)1 << EIID_H2O_ON),    //tig;
  67          
  68              ((u32)1 << EIID_TIG)       | ((u32)1 << EIID_TIG_SPOT) | ((u32)1 << EIID_MMA)      |
  69              ((u32)1 << EIID_2T)        | 
  70              ((u32)1 << EIID_AC)        | ((u32)1 << EIID_AC_MIX)   | ((u32)1 << EIID_DC_MINUS) |
  71              ((u32)1 << EIID_HF)        | ((u32)1 << EIID_LIFT)     |
  72              ((u32)1 << EIID_PULSE_OFF) | ((u32)1 << EIID_PULSE_ON) |
  73              ((u32)1 << EIID_SIN)       | ((u32)1 << EIID_TRIG)     | ((u32)1 << EIID_RECT)     | ((u32)1 << EIID_T
             -RAP) |
  74              ((u32)1 << EIID_D_10)      | ((u32)1 << EIID_D_16)     | ((u32)1 << EIID_D_20)     | ((u32)1 << EIID_D
             -_24) | ((u32)1 << EIID_D_32) | ((u32)1 << EIID_D_40) |
  75              ((u32)1 << EIID_H2O_OFF)   | ((u32)1 << EIID_H2O_ON),     //tig /spot;
  76          
  77              ((u32)1 << EIID_TIG)       | ((u32)1 << EIID_TIG_SPOT) | ((u32)1 << EIID_MMA)     |
  78              ((u32)1 << EIID_AC)        | ((u32)1 << EIID_DC_MINUS) | ((u32)1 << EIID_DC_PLUS) |
  79          
  80          
  81              ((u32)1 << EIID_PULSE_OFF) | ((u32)1 << EIID_PULSE_ON),     //mma
  82          };
  83          
  84          code const u32 menu_item_bm[] = { 
  85              ((u32)1 << EIID_TIG)       | ((u32)1 << EIID_TIG_SPOT) | ((u32)1 << EIID_MMA),      
  86              ((u32)1 << EIID_2T)        | ((u32)1 << EIID_4T)       | ((u32)1 << EIID_4T_PLUS),    
  87              ((u32)1 << EIID_AC)        | ((u32)1 << EIID_AC_MIX)   | ((u32)1 << EIID_DC_MINUS) | ((u32)1 << EIID_D
             -C_PLUS),                                             
  88              ((u32)1 << EIID_HF)        | ((u32)1 << EIID_LIFT),
  89              ((u32)1 << EIID_PULSE_OFF) | ((u32)1 << EIID_PULSE_ON),
  90              ((u32)1 << EIID_SIN)       | ((u32)1 << EIID_TRIG)     | ((u32)1 << EIID_RECT)     | ((u32)1 << EIID_T
             -RAP),                                                
  91              ((u32)1 << EIID_D_10)      | ((u32)1 << EIID_D_16)     | ((u32)1 << EIID_D_20)     | ((u32)1 << EIID_D
             -_24) | ((u32)1 << EIID_D_32) | ((u32)1 << EIID_D_40),
  92              ((u32)1 << EIID_H2O_OFF)   | ((u32)1 << EIID_H2O_ON),   
  93          }; 
  94          
  95          //—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–º –º–
             -µ–Ω—é
  96          idata u32 main_menu_bm = (((u32)1 << EIID_TIG)       |
  97                                   ((u32)1 << EIID_2T)        |
  98                                   ((u32)1 << EIID_AC)        |
  99                                   ((u32)1 << EIID_HF)        |
 100                                   ((u32)1 << EIID_PULSE_OFF) |
 101                                   ((u32)1 << EIID_SIN)       |
 102                                   ((u32)1 << EIID_D_10)      |
 103                                   ((u32)1 << EIID_H2O_OFF)      
 104                                         
 105          );
 106          //–±–∏—Ç–æ–≤–∞—è –º–∞—Å–∫–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞ –Ω–∏–∂–Ω–µ–º —ç–∫—Ä–∞–Ω–µ –Ω–µ–æ–
             -±—Ö–æ–¥–∏–º–∞ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
 107          
C51 COMPILER V9.53.0.0   TEMP                                                              11/19/2023 21:35:27 PAGE 3   

 108          icon_t cur_menu[48];
 109          u32 cur_menu_active;
 110          u8 cur_menu_size;
 111          
 112          u8 cur_active_items_id = TIG;
 113          
 114          u8 curent_selected_param_img_id = 0;
 115          
 116          idata u8 cur_par_id = 28; //–Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—é
 117          code const u16 ICON_RECT_SZ = 128;
 118          
 119          
 120          
 121          void (*cur_menu_fanc)(u8 item_pos);
 122          void change_mode_control(u8 item_pos);
 123          void make_menu_bar(u8 is_vertical, u16 start_x, u16 start_y, u32 id_bm, u16 start_image_vp, void (*cur_men
             -u_fanc)(u8 item_pos));
 124          
 125          
 126          
 127          
 128          
 129          
 130          
 131          
 132          
 133          
 134          
 135          
 136          void do_nothing(u8 item_pos)
 137          {
 138   1          static u8 sw = 0;
 139   1      
 140   1          if(sw & 1){
 141   2              //change_image_id(curent_selected_param_img_id, 28);
 142   2              //change_number_color(dgus_variables_display_sp_cylcogramm_numbers[0], PINK);
 143   2          } else {
 144   2              //change_image_id(curent_selected_param_img_id, 29);
 145   2              //change_number_color(dgus_variables_display_sp_cylcogramm_numbers[0], GREEN);
 146   2          }
 147   1              
 148   1      
 149   1          sw++;
 150   1          return;
 151   1      }
*** WARNING C280 IN LINE 136 OF source\temp.c: 'item_pos': unreferenced local variable
 152          
 153          
 154          
 155          
 156          
 157          void make_menu_bar(u8 is_vertical, u16 start_x, u16 start_y, u32 id_bm, u16 start_image_vp, void (*fanc)(u
             -8 item_pos))
 158          {
 159   1          u8 i; 
 160   1          s16 shift_x = 0;
 161   1          s16 shift_y = 0;
 162   1      
 163   1          if(is_vertical)
 164   1              shift_y = -ICON_RECT_SZ;
 165   1          else
 166   1              shift_x = ICON_RECT_SZ;
C51 COMPILER V9.53.0.0   TEMP                                                              11/19/2023 21:35:27 PAGE 4   

 167   1      
 168   1          i = 0;
 169   1      
 170   1          cur_menu_size = 0;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 171   1          while (id_bm != 0) {
 172   2              if((u32)id_bm & (u32)1) {
 173   3                  cur_menu[cur_menu_size].ico = i;
 174   3                  cur_menu[cur_menu_size].r.x0 = start_x;
 175   3                  cur_menu[cur_menu_size].r.y0 = start_y;
 176   3                  cur_menu[cur_menu_size].r.x1 = start_x + ICON_RECT_SZ;
 177   3                  cur_menu[cur_menu_size].r.y1 = start_y + ICON_RECT_SZ;
 178   3                  start_x += shift_x;
 179   3                  start_y += shift_y;
 180   3                  cur_menu_size++;        
 181   3              }
 182   2              id_bm >>= 1;
 183   2              i++;
 184   2          }
 185   1      
 186   1          cur_menu_fanc = fanc;
 187   1          
 188   1          
 189   1          for(i = 0; i < cur_menu_size ; i++) {
 190   2              //draw_image(cur_menu[i].r.x0, cur_menu[i].r.y0, cur_menu[i].ico, start_image_vp++);  
 191   2          }
 192   1         
 193   1          
 194   1          
 195   1      }
*** WARNING C280 IN LINE 157 OF source\temp.c: 'start_image_vp': unreferenced local variable
 196          
 197          void bottom_level_controls(u8 item_pos)
 198          { //–≤—ã–∑–æ–≤–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–º –º–µ–Ω—é
 199   1          u32 bm;
 200   1          u8 i;
 201   1          //–ø–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–µ–∫—Å —Ç–∏–ø–∞ –º–µ–Ω—é 
 202   1          for(i = 0; i < ARR_SIZE(menu_item_bm); i++) {
 203   2              if((u32)menu_item_bm[i] & (u32)((u32)1 << cur_menu[item_pos].ico)) { //–ø–æ–∏—Å–∫ –º–µ–Ω—é –∫ –∫–æ
             -—Ç–æ—Ä–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –¥–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
 204   3                  bm = active_items[cur_active_items_id] & menu_item_bm[i];//—É–±—Ä–∞—Ç—å –∏–∑ –æ—Ç–æ–±—Ä–∞–∂–µ–
             -Ω–∏—è —ç–µ–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ 
 205   3                  bm &= ~((u32)1 << cur_menu[item_pos].ico); //—É–±—Ä–∞—Ç—å –∏–∑ –æ—Ç–±–æ—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º
             -–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ –≤—ã—Å–≤–µ—á–µ–Ω –≤ –Ω–∏–∂–Ω–µ–º –º–µ–Ω—é
 206   3                  if(bm != 0 )//–µ—Å–ª–∏ –Ω–µ—á–µ–≥–æ –≤—ã–≤–æ–¥–∏—Ç—å –Ω–µ —Ä–∏—Å–æ–≤–∞—Ç—å –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–
             -ª—å–Ω–æ–µ –º–µ–Ω—é
 207   3                      //make_menu_bar(1, ICON_RECT_SZ * item_pos, 800 - 128 * 2, bm, VAR_ICON_START_VP + 10, cha
             -nge_mode_control);   //10 –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏–Ω–æ–≤–∞–Ω–æ –¥–æ —ç—Ç–æ–≥–æ      
 208   3                  break;
 209   3              }
 210   2          }
 211   1          
 212   1      
 213   1      }
 214          
 215          
 216          void change_mode_control(u8 item_pos) 
 217          {//–≤—ã–∑–æ–≤–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —ç–µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–º –º–µ–Ω—é
 218   1          u8 i;
 219   1          u32 bm;
 220   1          for(i = 0; i < ARR_SIZE(menu_item_bm); i++) {
 221   2              if(menu_item_bm[i] & (u32)1 << cur_menu[item_pos].ico) {
 222   3                  main_menu_bm &= (u32)~menu_item_bm[i]; //–æ—á–∏—Å—Ç—å –æ–±–ª–∞—Å—Ç—å —Å–≤—è–∑–∞–Ω–Ω—É—é —Å —ç—
C51 COMPILER V9.53.0.0   TEMP                                                              11/19/2023 21:35:27 PAGE 5   

             -Ç–∏–º –ø–æ–¥–º–µ–Ω—é –≤ –≥–∞–≤–Ω–æ–º –º–µ–Ω—é
 223   3                  switch (cur_menu[item_pos].ico)
 224   3                  {
 225   4                      case EIID_TIG:
 226   4                          cur_active_items_id = TIG;
 227   4                          break;
 228   4                      
 229   4                      case EIID_TIG_SPOT:
 230   4                          cur_active_items_id = EIID_TIG_SPOT;
 231   4                          break;
 232   4      
 233   4                      case EIID_MMA:
 234   4                          cur_active_items_id = MMA;
 235   4                          break;
 236   4                  }
 237   3                  main_menu_bm |= ((u32)1 << cur_menu[item_pos].ico); //–≤—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä
             -–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
 238   3                  
 239   3                  bm = active_items[cur_active_items_id];
 240   3                  bm &= (u32)main_menu_bm;
 241   3                  
 242   3                  
 243   3                  //–ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∑–∞—á–∏—Å—Ç–∫–∏ –∫–∞—Ä—Ç–∏–Ω–æ–≥ –Ω—É–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –Ω
             -–µ–∫—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö –∑–∞–≤–Ω–æ–≤–æ
 244   3                 
 245   3                  //make_menu_bar(0, 0, 800 - ICON_RECT_SZ, bm, VAR_ICON_START_VP, bottom_level_controls);
 246   3                  
 247   3                  break;
 248   3              }
 249   2          }
 250   1      }
 251          
 252          
 253          
 254          void draw_bottom_menu(void)
 255          {   
 256   1          cur_active_items_id = TIG;
 257   1          //make_menu_bar(0, 0, 800 - ICON_RECT_SZ, main_menu_bm, VAR_ICON_START_VP, bottom_level_controls);   
 258   1      }
 259          
 260          
 261          
 262          void add_touch_place(u16 x0, u16 y0, u16 x1, u16 y1, u8 touch_id)
 263          {
 264   1          if(cur_menu_size > ARR_SIZE(cur_menu)) return;
 265   1      
 266   1          cur_menu[cur_menu_size].ico = touch_id;
 267   1          cur_menu[cur_menu_size].r.x0 = x0;
 268   1          cur_menu[cur_menu_size].r.y0 = y0;
 269   1          cur_menu[cur_menu_size].r.x1 = x1;
 270   1          cur_menu[cur_menu_size].r.y1 = y1; // —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏
 271   1          cur_menu_size++;        
 272   1      }
 273          
 274          
 275          
 276          
 277          
 278          
 279          
 280          // LINE_HIGHT   = 13;//px
 281          // LINE_WIDTH   = 150;//px
C51 COMPILER V9.53.0.0   TEMP                                                              11/19/2023 21:35:27 PAGE 6   

 282          // LEVEL_HEIGHT = 120;//px
 283          // TOUCH_HEIGHT = 100;//px
 284             
 285          point_t dummy_vertical_line(point_t p)
 286          {
 287   1          
 288   1      }
*** WARNING C173 IN LINE 288 OF source\temp.c: missing return-expression
*** WARNING C280 IN LINE 285 OF source\temp.c: 'p': unreferenced local variable
 289          
 290          point_t add_t_preflow(point_t p) //–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω–µ—á–Ω—É—é —Ç–æ—á–∫—É –ø–æ—Å–ª–µ –æ—Ç—Ä–∏—Å–
             -æ–≤–∫–∏ –¥–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–∫–∞
 291          {
 292   1          point_t p2 = make_point(p.x + LINE_WIDTH, p.y);
*** ERROR C247 IN LINE 292 OF source\temp.c: non-address/-constant initializer
 293   1          draw_line(p.x, p.y, p2.x, p2.y, LINE_HIGHT, GREEN);
 294   1      
 295   1          Draw_Number(p.x, p.y + LINE_WIDTH, p2.x, TIME_Y_LEVEL, 100, 24, CYAN); //–≤—Ä–µ–º—è –ø—Ä–æ–¥—É–≤–∫–∏
*** ERROR C208 IN LINE 295 OF source\temp.c: '_Draw_Number': too many actual parameters
 296   1          add_touch_place(p.x, p.y, p2.x, TIME_Y_LEVEL + TOUCH_HEIGHT, EIID_PRE_FLOW_T1);//—Å–æ–∑–¥–∞–Ω–∏–µ –æ–±
             -–ª–∞—Å—Ç–∏ –∫–∞—Å–∞–Ω–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–¥—É–≤–∫–∏
 297   1          return p2;    
 298   1      }
 299          
 300          point_t add_t_start_i(point_t p) 
 301          {
 302   1          point_t p2 = make_point(p.x, p.y + LEVEL_HEIGHT);
*** ERROR C247 IN LINE 302 OF source\temp.c: non-address/-constant initializer
 303   1      
 304   1          draw_line(p.x, p.y, p2.y, p2.x,  LINE_HIGHT, GREEN);
 305   1      
 306   1          Draw_Number(p[2].x + LINE_HIGHT, y_for_times, 100, 24, CYAN); //–≤—Ä–µ–º—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ç–æ–∫
             -–∞
*** ERROR C202 IN LINE 306 OF source\temp.c: 'y_for_times': undefined identifier
 307   1          Draw_Number(p[2].x + LINE_HIGHT, p[3].y - 64, 100, 24, RED); //–Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–æ–∫
 308   1          
 309   1          add_touch_place(p[2].x, y_for_times, p[3].x, y_for_times + TOUCH_HEIGHT, EIID_START_T2);//—Å–æ–∑–¥–∞–Ω
             -–∏–µ –æ–±–ª–∞—Å—Ç–∏ –∫–∞—Å–∞–Ω–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ç–æ–∫–∞
 310   1          add_touch_place(p[2].x, p[2].y - TOUCH_HEIGHT, p[3].x, p[3].y, EIID_START_I1); //–æ–±–ª–∞—Å—Ç—å –∫–∞—Å
             -–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–æ–∫
 311   1      }
 312          
 313          point_t add_t_up(point_t p) 
 314          {
 315   1          Draw_Number(p[3].x + LINE_HIGHT, y_for_times, 100, 24, CYAN); //–≤—Ä–µ–º—è –Ω–∞—Ä–æ—Å—Ç–∞–Ω–∏—è
 316   1          p[4] = make_point(p[3].x + LINE_WIDTH,   p[3].y - LEVEL_HEIGHT);
 317   1          add_touch_place(p[3].x, y_for_times, p[4].x, y_for_times + TOUCH_HEIGHT, EIID_UP_T3); //–æ–±–ª–∞—Å—Ç—å
             - –∫–∞—Å–∞–Ω–∏—è –≤—Ä–µ–º—è –Ω–∞—Ä–æ—Å—Ç–∞–Ω–∏—è
 318   1      
 319   1          draw_line(p[i].x, p[i].y, p[i+1].x, p[i+1].y, LINE_HIGHT, GREEN);
 320   1      }
 321          
 322          point_t add_base_i1_i2_t(point_t) 
 323          {
 324   1          Draw_Number(p[4].x + LINE_HIGHT, y_for_times, 100, 24, CYAN); //–≤—Ä–µ–º—è –±–∞–∑—ã
 325   1          Draw_Number(p[4].x + LINE_HIGHT, p[4].y - 64, 100, 24, RED); //—Ç–æ–∫ –±–∞–∑—ã
 326   1          Draw_Number(p[4].x + LINE_HIGHT, p[4].y + 32, 100, 24, RED); //–≤—Ç–æ—Ä–æ–π —Ç–æ–∫ –±–∞–∑—ã
 327   1          
 328   1          p[5] = make_point(p[4].x + LINE_WIDTH,   p[4].y); 
 329   1          add_touch_place(p[4].x, p[4].y - TOUCH_HEIGHT, p[5].x, p[5].y, EIID_BASE_I2); //–æ–±–ª–∞—Å—Ç—å –∫–∞—Å–
             -∞–Ω–∏—è —Ç–æ–∫ –±–∞–∑—ã
 330   1          add_touch_place(p[4].x, p[4].y, p[5].x, p[5].y + TOUCH_HEIGHT, EIID_BASE2_I2X); //–æ–±–ª–∞—Å—Ç—å –∫–∞—
C51 COMPILER V9.53.0.0   TEMP                                                              11/19/2023 21:35:27 PAGE 7   

             -Å–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–π —Ç–æ–∫ –±–∞–∑—ã
 331   1      
 332   1          add_touch_place(p[4].x, y_for_times, p[5].x, y_for_times + TOUCH_HEIGHT, EIID_BASE_T4); //–æ–±–ª–∞—Å—Ç
             -—å –∫–∞—Å–∞–Ω–∏—è –≤—Ä–µ–º—è –±–∞–∑—ã
 333   1      
 334   1          draw_line(p[i].x, p[i].y, p[i+1].x, p[i+1].y, LINE_HIGHT, GREEN);
 335   1      }
 336          
 337          point_t add_i_t_impulse(point_t) 
 338          {
 339   1          Draw_Number(p[5].x + LINE_HIGHT, y_for_times, 100, 24, CYAN);// –≤—Ä–µ–º—è –∏–º–ø—É–ª—å—Å–∞
 340   1          p[6] = make_point(p[5].x , p[5].y + LEVEL_HEIGHT);
 341   1          Draw_Number(p[5].x + LINE_HIGHT, p[6].y - 64, 100, 24, RED); //—Ç–æ–∫ –∏–º–ø—É–ª—å—Å–∞
 342   1          p[7] = make_point(p[6].x + LINE_WIDTH, p[6].y);
 343   1          add_touch_place(p[6].x, p[6].y - TOUCH_HEIGHT, p[7].x, p[7].y, EIID_IMPULSE_I3); //–æ–±–ª–∞—Å—Ç—å –∫–∞
             -—Å–∞–Ω–∏—è —Ç–æ–∫ –∏–º–ø—É–ª—å—Å–∞
 344   1          add_touch_place(p[6].x, y_for_times, p[7].x, y_for_times + TOUCH_HEIGHT, EIID_IMPULSE_T5); //–æ–±–ª–∞—
             -Å—Ç—å –∫–∞—Å–∞–Ω–∏—è –≤—Ä–µ–º—è —Ç–æ–∫–∞ –∏–º–ø—É–ª—å—Å–∞
 345   1      
 346   1          draw_line(p[i].x, p[i].y, p[i+1].x, p[i+1].y, LINE_HIGHT, GREEN);
 347   1      }
 348          
 349          point_t add_t_down(point_t)
 350          {
 351   1          Draw_Number(p[7].x + LINE_HIGHT, y_for_times, 100, 24, CYAN); //–≤—Ä–µ–º—è —Å–ø–∞–¥–∞
 352   1          p[8] = make_point(p[7].x,  p[7].y - LEVEL_HEIGHT);
 353   1          p[9] = make_point(p[8].x + LINE_WIDTH, p[8].y + LEVEL_HEIGHT);
 354   1          add_touch_place(p[8].x, y_for_times, p[9].x, y_for_times + TOUCH_HEIGHT, EIID_DOWN_T6); //–æ–±–ª–∞—Å—Ç
             -—å –∫–∞—Å–∞–Ω–∏—è –≤—Ä–µ–º—è —Å–ø–∞–¥–∞
 355   1      
 356   1          draw_line(p[i].x, p[i].y, p[i+1].x, p[i+1].y, LINE_HIGHT, GREEN);
 357   1      }
 358          
 359          point_t add_end_i_t(point_t)
 360          {
 361   1          Draw_Number(p[9].x + LINE_HIGHT, y_for_times, 100, 24, CYAN); //–≤—Ä–µ–º—è –∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ç–æ–∫–∞
 362   1          Draw_Number(p[9].x + LINE_HIGHT, p[9].y - 64, 100, 24, RED); //–∫–æ–Ω–µ—á–Ω—ã–π —Ç–æ–∫
 363   1      
 364   1          p[10] = make_point(p[9].x + LINE_WIDTH, p[9].y);
 365   1          add_touch_place(p[9].x, p[9].y - TOUCH_HEIGHT, p[10].x, p[10].y, EIID_END_I4); //–æ–±–ª–∞—Å—Ç—å –∫–∞—Å
             -–∞–Ω–∏—è –∫–æ–Ω–µ—á–Ω—ã–π —Ç–æ–∫
 366   1          add_touch_place(p[9].x, y_for_times, p[10].x, y_for_times + TOUCH_HEIGHT, EIID_END_T7); //–æ–±–ª–∞—Å—Ç
             -—å –∫–∞—Å–∞–Ω–∏—è –≤—Ä–µ–º—è –∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ç–æ–∫
 367   1          
 368   1          draw_line(p[i].x, p[i].y, p[i+1].x, p[i+1].y, LINE_HIGHT, GREEN);
 369   1      }
 370          
 371          point_t add_t_postflow(point_t)
 372          {
 373   1          Draw_Number(p[10].x + LINE_HIGHT, y_for_times, 100, 24, CYAN);//–≤—Ä–µ–º—è –∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–¥—É
             -–≤–∫–∏
 374   1          p[11] = make_point(p[10].x, p[10].y + LEVEL_HEIGHT);
 375   1          p[12] = make_point(p[11].x + LINE_WIDTH, p[11].y);
 376   1          add_touch_place(p[11].x, y_for_times, p[12].x, y_for_times + TOUCH_HEIGHT, EIID_POST_FLOW_T8); //–æ–±–
             -ª–∞—Å—Ç—å –∫–∞—Å–∞–Ω–∏—è –≤—Ä–µ–º—è –∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–¥—É–≤–∫–∏
 377   1      
 378   1          draw_line(p[i].x, p[i].y, p[i+1].x, p[i+1].y, LINE_HIGHT, GREEN);
 379   1      }
 380          
 381          
 382          
 383          void place_numbers_on_cyclogramm(void) 
C51 COMPILER V9.53.0.0   TEMP                                                              11/19/2023 21:35:27 PAGE 8   

 384          {
 385   1          point_t p;
 386   1          const u8 LINE_HIGHT   = 13;//px
 387   1          const u8 LINE_WIDTH   = 150;//px
 388   1          const u8 LEVEL_HEIGHT = 120;//px
 389   1          const u8 TOUCH_HEIGHT = 100;//px
 390   1          u16 i;
 391   1          u16 x = 40;
 392   1          u16 y = 550;
 393   1          u16 y_for_times; //–≤—Ä–µ–º–µ–Ω–∞ —Ä–∞—Å–ø–æ–ª–æ–≥–∞—é—Ç—Å—è –Ω–∞ –æ–¥–Ω–æ–º —É—Ä–æ–≤–Ω–µ
 394   1          u8 prev;
 395   1          u8 next;
 396   1          
 397   1          drawing_init();
 398   1      
 399   1          p = make_point(x,y);
 400   1          p = add_t_preflow(p);
 401   1      
 402   1      
 403   1      
 404   1      
 405   1          Draw_Number(0, 0, 100, 64, RED, 0x5000); //–¢–µ–∫—É—â–∏–π –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
 406   1          
 407   1              
 408   1          // cur_menu_fanc = do_nothing;   
 409   1          // draw_bottom_menu();
 410   1      }
 411          
 412          
 413          

C51 COMPILATION COMPLETE.  4 WARNING(S),  4 ERROR(S)
