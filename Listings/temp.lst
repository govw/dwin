C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN .\Objects\temp.obj
COMPILER INVOKED BY: D:\DWIN\Keil_v5\C51\BIN\C51.EXE source\temp.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\driver;.\sour
                    -ce) DEBUG OBJECTEXTEND CODE SYMBOLS PRINT(.\Listings\temp.lst) OBJECT(.\Objects\temp.obj)

line level    source

   1          #include "temp.h"
   2          #include "sys.h"
   3          #include "string.h"
   4          
   5          
   6          void draw_bottom_menu(void);
   7          void level_back(void);
   8          void do_nothing(void);
   9          
  10          
  11          MENU_T *p_cur_menu;
  12          
  13          u8 last_selected_menu_item;
  14          u8 prev_menu_item;
  15          
  16          code MENU_ITEM_T welding_mod_sel[] = {
  17              {0, 600, EIID_TIG},
  18              {0, 500, EIID_MMA},
  19              {0, 400, EIID_MIX},          
  20          };
  21          
  22          code MENU_T welding_mod_sel_menu = {sizeof(welding_mod_sel) / sizeof(welding_mod_sel[0]), welding_mod_sel,
             - do_nothing};
  23          
  24          code MENU_ITEM_T weld_button_mod[] = {
  25              {100, 600, EIID_2T},
  26              {100, 500, EIID_4T},
  27              {100, 400, EIID_4T_PLUS},          
  28          };
  29          code MENU_T weld_button_mod_menu = {sizeof(weld_button_mod) / sizeof(weld_button_mod[0]), weld_button_mod,
             - do_nothing};
  30          
  31          
  32          code MENU_ITEM_T polarity[] = {
  33              {200, 600, EIID_DC_MINUS},
  34              {200, 500, EIID_DC_PLUS},
  35              {200, 400, EIID_AC},          
  36          };
  37          code MENU_T polarity_menu = {sizeof(polarity) / sizeof(polarity[0]), polarity, do_nothing};
  38          
  39          
  40          code MENU_ITEM_T ignition_type[] = {
  41              {300, 600, EIID_HF},
  42              {300, 500, EIID_LIFT},     
  43          };
  44          code MENU_T ignition_type_menu = {sizeof(ignition_type) / sizeof(ignition_type[0]), ignition_type, do_noth
             -ing};
  45          
  46          
  47          code MENU_ITEM_T pulse_state[] = {
  48              {400, 600, EIID_PULSE_OFF},
  49              {400, 500, EIID_PULSE_ON},     
  50          };
  51          code MENU_T pulse_state_menu = {sizeof(pulse_state) / sizeof(pulse_state[0]), pulse_state, do_nothing};
C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 2   

  52          
  53          
  54          code MENU_ITEM_T electrode_d[] = {
  55              {500, 600, EIID_D_10},
  56              {500, 500, EIID_D_16},
  57              {500, 400, EIID_D_20}, 
  58              {500, 300, EIID_D_40},      
  59          };
  60          code MENU_T electrode_d_menu = {sizeof(electrode_d) / sizeof(electrode_d[0]), electrode_d, do_nothing};
  61          
  62          
  63          code MENU_ITEM_T vawe_form[] = {
  64              {500, 600, EIID_D_10},
  65              {500, 500, EIID_D_16},
  66              {500, 400, EIID_D_20}, 
  67              {500, 300, EIID_D_40},      
  68          };
  69          code MENU_T vawe_form_menu = {sizeof(vawe_form) / sizeof(vawe_form[0]), vawe_form, do_nothing};
  70          
  71          
  72          code MENU_ITEM_T flow_sensor[] = {
  73              {700, 600, EIID_H2O_OFF},
  74              {700, 500, EIID_H2O_ON}, 
  75          };
  76          code MENU_T flow_sensor_menu = {sizeof(flow_sensor) / sizeof(flow_sensor[0]), flow_sensor, do_nothing};
  77          
  78          void draw_sub_menu(void)
  79          {
  80   1          MENU_T *array_of_menus[] = {
  81   1              &welding_mod_sel_menu,
  82   1              &weld_button_mod_menu,
  83   1              &polarity_menu,
  84   1              &ignition_type_menu,
  85   1              &pulse_state_menu,
  86   1              &electrode_d_menu,
  87   1              &vawe_form_menu
  88   1          };
  89   1          prev_menu_item = last_selected_menu_item;
  90   1          draw_menu(0x9500, array_of_menus[last_selected_menu_item]);  
  91   1      }
  92          
  93          idata MENU_ITEM_T bottom_menu_items[] = { //idata
  94              {000, 700, EIID_4T  },
  95              {100, 700, EIID_MMA },
  96              {200, 700, EIID_MMA },
  97              {300, 700, EIID_MIX },
  98              {400, 700, EIID_2T  },
  99              {500, 700, EIID_4T  },
 100              {600, 700, EIID_4T_PLUS},
 101          };
 102          idata MENU_T bottom_menu = {sizeof(bottom_menu_items) / sizeof(bottom_menu_items[0]), bottom_menu_items, d
             -raw_sub_menu};
 103          
 104          
 105          
 106          
 107          
 108          
 109          void do_nothing(void)
 110          { 
 111   1          u16 tmp = 0x0000;
 112   1          write_dgus_vp(0x9500, (u8*)&tmp, 1); //clear vertical menu
C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 3   

 113   1          bottom_menu.p_items[prev_menu_item].icon.id = p_cur_menu->p_items[last_selected_menu_item].icon.id;
 114   1          draw_bottom_menu();    
 115   1      }
 116          
 117          
 118          void level_back(void)
 119          {
 120   1          u16 tmp = 0x0000;
 121   1          write_dgus_vp(0x9500, (u8*)&tmp, 1); //clear vertical menu
 122   1          draw_bottom_menu();
 123   1      }
 124          
 125          
 126          
 127          void draw_bottom_menu(void)
 128          {   
 129   1          draw_menu(0x9000, &bottom_menu);      
 130   1      }
 131          
 132          
 133          void draw_menu(u16 vp, MENU_T *p_menu)
 134          {
 135   1          u8 i, j;
 136   1          u16 cmd[100];
 137   1          cmd[0] = 0x2407; //icon_write_instruction      
 138   1          cmd[1] = p_menu->size; //display_icon_cnt
 139   1          j = 2;
 140   1          for(i = 0; i < p_menu->size; i++) {
 141   2              cmd[j] = p_menu->p_items[i].icon.x;
 142   2              j++;
 143   2              cmd[j] = p_menu->p_items[i].icon.y;
 144   2              j++;
 145   2              cmd[j] = p_menu->p_items[i].icon.id;
 146   2              j++;
 147   2          }
 148   1          cmd[j] = 0xFF00;
 149   1      
 150   1          p_cur_menu = p_menu; // инициализация указателя на текущий обрабо
             -тичк кнопок и их областей
 151   1          write_dgus_vp(vp, (u8*)&cmd, j);
 152   1      }
 153          
 154          
 155          
 156          
 157          
 158          
 159          
 160          
 161          
 162          //    struct{
 163              //         u8 icon_library;
 164              //         u8 icon_write_instruction;
 165              //         u16 display_icon_cnt;
 166              //         ICON_T bottom_icons[11];
 167              //         u16 terminator;
 168              //     } temp = {
 169              //         36,
 170              //         0x07,
 171              //         11,//icon cnt
 172              //         {
 173              //             {0,   700, EIID_TIG},
C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 4   

 174              //             {100, 700, EIID_MMA},
 175              //             {200, 700, 2},
 176              //             {300, 700, EIID_MIX},
 177              //             {400, 700, EIID_2T},
 178              //             {500, 700, EIID_4T},
 179              //             {600, 700, EIID_4T_PLUS},
 180              //             {700, 700, EIID_TRAP},
 181              //             {800, 700, EIID_SIN},
 182              //             {900, 700, EIID_4T_PLUS},
 183              //             {100, 700, EIID_DC_MINUS},
 184              //         },   
 185              //         0xFF00,
 186              //     };   
 187                  
 188              //     write_dgus_vp(0x9000, (u8*) &temp, sizeof(temp) / 2); 
C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION draw_sub_menu (BEGIN)
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
0000 7800        R     MOV     R0,#LOW array_of_menus
0002 7C00        R     MOV     R4,#HIGH array_of_menus
0004 7D01              MOV     R5,#01H
0006 7BFF              MOV     R3,#0FFH
0008 7A00        R     MOV     R2,#HIGH _?ix1000
000A 7900        R     MOV     R1,#LOW _?ix1000
000C 7E00              MOV     R6,#00H
000E 7F15              MOV     R7,#015H
0010 120000      E     LCALL   ?C?COPY
                                           ; SOURCE LINE # 89
0013 900000      R     MOV     DPTR,#last_selected_menu_item
0016 E0                MOVX    A,@DPTR
0017 900000      R     MOV     DPTR,#prev_menu_item
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 90
001B 75F003            MOV     B,#03H
001E A4                MUL     AB
001F 2400        R     ADD     A,#LOW array_of_menus
0021 F582              MOV     DPL,A
0023 E4                CLR     A
0024 3400        R     ADDC    A,#HIGH array_of_menus
0026 F583              MOV     DPH,A
0028 E0                MOVX    A,@DPTR
0029 FB                MOV     R3,A
002A A3                INC     DPTR
002B E0                MOVX    A,@DPTR
002C FA                MOV     R2,A
002D A3                INC     DPTR
002E E0                MOVX    A,@DPTR
002F F9                MOV     R1,A
0030 7F00              MOV     R7,#00H
0032 7E95              MOV     R6,#095H
0034 020000      R     LJMP    _draw_menu
             ; FUNCTION draw_sub_menu (END)

             ; FUNCTION do_nothing (BEGIN)
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#tmp
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 112
0007 7B01              MOV     R3,#01H
0009 7A00        R     MOV     R2,#HIGH tmp
000B 7900        R     MOV     R1,#LOW tmp
000D 900000      E     MOV     DPTR,#?_write_dgus_vp?BYTE+05H
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 04                INC     A
0013 F0                MOVX    @DPTR,A
0014 7F00              MOV     R7,#00H
0016 7E95              MOV     R6,#095H
C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 6   

0018 120000      E     LCALL   _write_dgus_vp
                                           ; SOURCE LINE # 113
001B 900000      R     MOV     DPTR,#p_cur_menu
001E E0                MOVX    A,@DPTR
001F FB                MOV     R3,A
0020 A3                INC     DPTR
0021 E0                MOVX    A,@DPTR
0022 FA                MOV     R2,A
0023 A3                INC     DPTR
0024 E0                MOVX    A,@DPTR
0025 F9                MOV     R1,A
0026 900001            MOV     DPTR,#01H
0029 120000      E     LCALL   ?C?PLDOPTR
002C 900000      R     MOV     DPTR,#last_selected_menu_item
002F E0                MOVX    A,@DPTR
0030 75F006            MOV     B,#06H
0033 A4                MUL     AB
0034 29                ADD     A,R1
0035 F9                MOV     R1,A
0036 EA                MOV     A,R2
0037 35F0              ADDC    A,B
0039 FA                MOV     R2,A
003A 900004            MOV     DPTR,#04H
003D 120000      E     LCALL   ?C?ILDOPTR
0040 FD                MOV     R5,A
0041 ACF0              MOV     R4,B
0043 900000      R     MOV     DPTR,#prev_menu_item
0046 E0                MOVX    A,@DPTR
0047 75F006            MOV     B,#06H
004A A4                MUL     AB
004B FF                MOV     R7,A
004C 7800        R     MOV     R0,#LOW bottom_menu+01H
004E 8603              MOV     AR3,@R0
0050 08                INC     R0
0051 E6                MOV     A,@R0
0052 FA                MOV     R2,A
0053 08                INC     R0
0054 E6                MOV     A,@R0
0055 2F                ADD     A,R7
0056 F9                MOV     R1,A
0057 EA                MOV     A,R2
0058 35F0              ADDC    A,B
005A FA                MOV     R2,A
005B 900004            MOV     DPTR,#04H
005E EC                MOV     A,R4
005F 8DF0              MOV     B,R5
0061 120000      E     LCALL   ?C?ISTOPTR
                                           ; SOURCE LINE # 114
0064 020000      R     LJMP    draw_bottom_menu
             ; FUNCTION do_nothing (END)

             ; FUNCTION level_back (BEGIN)
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#tmp
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 121
0007 7B01              MOV     R3,#01H
C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 7   

0009 7A00        R     MOV     R2,#HIGH tmp
000B 7900        R     MOV     R1,#LOW tmp
000D 900000      E     MOV     DPTR,#?_write_dgus_vp?BYTE+05H
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 04                INC     A
0013 F0                MOVX    @DPTR,A
0014 7F00              MOV     R7,#00H
0016 7E95              MOV     R6,#095H
0018 120000      E     LCALL   _write_dgus_vp
                                           ; SOURCE LINE # 122
001B 020000      R     LJMP    draw_bottom_menu
             ; FUNCTION level_back (END)

             ; FUNCTION draw_bottom_menu (BEGIN)
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
0000 7B00              MOV     R3,#00H
0002 7A00        R     MOV     R2,#HIGH bottom_menu
0004 7900        R     MOV     R1,#LOW bottom_menu
0006 7F00              MOV     R7,#00H
0008 7E90              MOV     R6,#090H
000A 020000      R     LJMP    _draw_menu
             ; FUNCTION draw_bottom_menu (END)

             ; FUNCTION _draw_menu (BEGIN)
                                           ; SOURCE LINE # 133
0000 900000      R     MOV     DPTR,#vp
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 EB                MOV     A,R3
000A F0                MOVX    @DPTR,A
000B A3                INC     DPTR
000C EA                MOV     A,R2
000D F0                MOVX    @DPTR,A
000E A3                INC     DPTR
000F E9                MOV     A,R1
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 137
0011 900000      R     MOV     DPTR,#cmd
0014 7424              MOV     A,#024H
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
0018 7407              MOV     A,#07H
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
001B 120000      E     LCALL   ?C?CLDPTR
001E FF                MOV     R7,A
001F 900000      R     MOV     DPTR,#cmd+02H
0022 E4                CLR     A
0023 F0                MOVX    @DPTR,A
0024 A3                INC     DPTR
0025 EF                MOV     A,R7
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
0027 900000      R     MOV     DPTR,#j
C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 8   

002A 7402              MOV     A,#02H
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
002D E4                CLR     A
002E 900000      R     MOV     DPTR,#i
0031 F0                MOVX    @DPTR,A
0032         ?C0005:
0032 900000      R     MOV     DPTR,#p_menu
0035 E0                MOVX    A,@DPTR
0036 FB                MOV     R3,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FA                MOV     R2,A
003A A3                INC     DPTR
003B E0                MOVX    A,@DPTR
003C F9                MOV     R1,A
003D 120000      E     LCALL   ?C?CLDPTR
0040 FF                MOV     R7,A
0041 900000      R     MOV     DPTR,#i
0044 E0                MOVX    A,@DPTR
0045 C3                CLR     C
0046 9F                SUBB    A,R7
0047 4003              JC      $ + 5H
0049 020000      R     LJMP    ?C0006
                                           ; SOURCE LINE # 141
004C 900001            MOV     DPTR,#01H
004F 120000      E     LCALL   ?C?PLDOPTR
0052 900000      R     MOV     DPTR,#i
0055 E0                MOVX    A,@DPTR
0056 FF                MOV     R7,A
0057 75F006            MOV     B,#06H
005A A4                MUL     AB
005B F582              MOV     DPL,A
005D 85F083            MOV     DPH,B
0060 120000      E     LCALL   ?C?ILDOPTR
0063 FD                MOV     R5,A
0064 900000      R     MOV     DPTR,#j
0067 E0                MOVX    A,@DPTR
0068 25E0              ADD     A,ACC
006A 2400        R     ADD     A,#LOW cmd
006C F582              MOV     DPL,A
006E E4                CLR     A
006F 3400        R     ADDC    A,#HIGH cmd
0071 F583              MOV     DPH,A
0073 E5F0              MOV     A,B
0075 F0                MOVX    @DPTR,A
0076 A3                INC     DPTR
0077 ED                MOV     A,R5
0078 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
0079 900000      R     MOV     DPTR,#j
007C E0                MOVX    A,@DPTR
007D 04                INC     A
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 143
007F 900000      R     MOV     DPTR,#p_menu
0082 E0                MOVX    A,@DPTR
0083 FB                MOV     R3,A
0084 A3                INC     DPTR
0085 E0                MOVX    A,@DPTR
0086 FA                MOV     R2,A
0087 A3                INC     DPTR
C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 9   

0088 E0                MOVX    A,@DPTR
0089 F9                MOV     R1,A
008A 900001            MOV     DPTR,#01H
008D 120000      E     LCALL   ?C?PLDOPTR
0090 EF                MOV     A,R7
0091 75F006            MOV     B,#06H
0094 A4                MUL     AB
0095 29                ADD     A,R1
0096 F9                MOV     R1,A
0097 EA                MOV     A,R2
0098 35F0              ADDC    A,B
009A FA                MOV     R2,A
009B 900002            MOV     DPTR,#02H
009E 120000      E     LCALL   ?C?ILDOPTR
00A1 FF                MOV     R7,A
00A2 900000      R     MOV     DPTR,#j
00A5 E0                MOVX    A,@DPTR
00A6 25E0              ADD     A,ACC
00A8 2400        R     ADD     A,#LOW cmd
00AA F582              MOV     DPL,A
00AC E4                CLR     A
00AD 3400        R     ADDC    A,#HIGH cmd
00AF F583              MOV     DPH,A
00B1 E5F0              MOV     A,B
00B3 F0                MOVX    @DPTR,A
00B4 A3                INC     DPTR
00B5 EF                MOV     A,R7
00B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
00B7 900000      R     MOV     DPTR,#j
00BA E0                MOVX    A,@DPTR
00BB 04                INC     A
00BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
00BD 900000      R     MOV     DPTR,#p_menu
00C0 E0                MOVX    A,@DPTR
00C1 FB                MOV     R3,A
00C2 A3                INC     DPTR
00C3 E0                MOVX    A,@DPTR
00C4 FA                MOV     R2,A
00C5 A3                INC     DPTR
00C6 E0                MOVX    A,@DPTR
00C7 F9                MOV     R1,A
00C8 900001            MOV     DPTR,#01H
00CB 120000      E     LCALL   ?C?PLDOPTR
00CE 900000      R     MOV     DPTR,#i
00D1 E0                MOVX    A,@DPTR
00D2 75F006            MOV     B,#06H
00D5 A4                MUL     AB
00D6 29                ADD     A,R1
00D7 F9                MOV     R1,A
00D8 EA                MOV     A,R2
00D9 35F0              ADDC    A,B
00DB FA                MOV     R2,A
00DC 900004            MOV     DPTR,#04H
00DF 120000      E     LCALL   ?C?ILDOPTR
00E2 FF                MOV     R7,A
00E3 900000      R     MOV     DPTR,#j
00E6 E0                MOVX    A,@DPTR
00E7 25E0              ADD     A,ACC
00E9 2400        R     ADD     A,#LOW cmd
00EB F582              MOV     DPL,A
C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 10  

00ED E4                CLR     A
00EE 3400        R     ADDC    A,#HIGH cmd
00F0 F583              MOV     DPH,A
00F2 E5F0              MOV     A,B
00F4 F0                MOVX    @DPTR,A
00F5 A3                INC     DPTR
00F6 EF                MOV     A,R7
00F7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 146
00F8 900000      R     MOV     DPTR,#j
00FB E0                MOVX    A,@DPTR
00FC 04                INC     A
00FD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 147
00FE 900000      R     MOV     DPTR,#i
0101 E0                MOVX    A,@DPTR
0102 04                INC     A
0103 F0                MOVX    @DPTR,A
0104 020000      R     LJMP    ?C0005
0107         ?C0006:
                                           ; SOURCE LINE # 148
0107 900000      R     MOV     DPTR,#j
010A E0                MOVX    A,@DPTR
010B FD                MOV     R5,A
010C 25E0              ADD     A,ACC
010E 2400        R     ADD     A,#LOW cmd
0110 F582              MOV     DPL,A
0112 E4                CLR     A
0113 3400        R     ADDC    A,#HIGH cmd
0115 F583              MOV     DPH,A
0117 74FF              MOV     A,#0FFH
0119 F0                MOVX    @DPTR,A
011A A3                INC     DPTR
011B E4                CLR     A
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 150
011D 900000      R     MOV     DPTR,#p_menu
0120 E0                MOVX    A,@DPTR
0121 F9                MOV     R1,A
0122 A3                INC     DPTR
0123 E0                MOVX    A,@DPTR
0124 FA                MOV     R2,A
0125 A3                INC     DPTR
0126 E0                MOVX    A,@DPTR
0127 900000      R     MOV     DPTR,#p_cur_menu
012A C9                XCH     A,R1
012B F0                MOVX    @DPTR,A
012C A3                INC     DPTR
012D EA                MOV     A,R2
012E F0                MOVX    @DPTR,A
012F A3                INC     DPTR
0130 E9                MOV     A,R1
0131 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 151
0132 900000      R     MOV     DPTR,#vp
0135 E0                MOVX    A,@DPTR
0136 FE                MOV     R6,A
0137 A3                INC     DPTR
0138 E0                MOVX    A,@DPTR
0139 FF                MOV     R7,A
013A 7B01              MOV     R3,#01H
013C 7A00        R     MOV     R2,#HIGH cmd
C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 11  

013E 7900        R     MOV     R1,#LOW cmd
0140 900000      E     MOV     DPTR,#?_write_dgus_vp?BYTE+05H
0143 E4                CLR     A
0144 F0                MOVX    @DPTR,A
0145 A3                INC     DPTR
0146 ED                MOV     A,R5
0147 F0                MOVX    @DPTR,A
0148 020000      E     LJMP    _write_dgus_vp
             ; FUNCTION _draw_menu (END)

C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 12  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


EIID_AC. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
electrode_d. . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    006CH  24
EIID_D_10. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_H2O_OFF . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_D_20. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_2T. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_D_40. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_4T. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_PULSE_ON. . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_D_16. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_HF. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ignition_type. . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0048H  12
_write_dgus_vp . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
level_back . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0000H  2
last_selected_menu_item. . . . . . . .  PUBLIC   XDATA  U_CHAR   0000H  1
polarity_menu. . . . . . . . . . . . .  PUBLIC   CODE   STRUCT   0042H  6
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
ICON_ID. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
electrode_d_menu . . . . . . . . . . .  PUBLIC   CODE   STRUCT   0084H  6
ignition_type_menu . . . . . . . . . .  PUBLIC   CODE   STRUCT   0054H  6
EIID_DC_PLUS . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_4T_PLUS . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MSPIFLASH. . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  16
  Mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  ID . . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0001H  2
  FLAddr . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0003H  4
  VPAddr . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0007H  2
  Len. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0009H  2
  Buf. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      000BH  3
  Delay. . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    000EH  2
_mSPIFLASH . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  16
  Mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  ID . . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0001H  2
  FLAddr . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0003H  4
  VPAddr . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0007H  2
  Len. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0009H  2
  Buf. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      000BH  3
  Delay. . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    000EH  2
s8 . . . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
EIID_RECT. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_LIFT. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
u8 . . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
MNORFLASH. . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  12
  Mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  FLAddr . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0001H  4
  VPAddr . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0005H  2
  Len. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0007H  2
  Buf. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0009H  3
_mNORFLASH . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  12
  Mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  FLAddr . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0001H  4
  VPAddr . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0005H  2
  Len. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0007H  2
  Buf. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0009H  3
do_nothing . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0000H  2
C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 13  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


bottom_menu. . . . . . . . . . . . . .  PUBLIC   IDATA  STRUCT   0000H  6
pulse_state. . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    005AH  12
p_cur_menu . . . . . . . . . . . . . .  PUBLIC   XDATA  PTR      0001H  3
EIID_TRIG. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_TRAP. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
bottom_menu_items. . . . . . . . . . .  PUBLIC   IDATA  ARRAY    0006H  42
welding_mod_sel. . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0000H  18
flow_sensor. . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    00A8H  12
draw_bottom_menu . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_?ix1000 . . . . . . . . . . . . . . .  STATIC   CODE   ARRAY    00BAH  21
EIID_H2O_ON. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_PULSE_OFF . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_draw_menu . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  vp . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0000H  2
  p_menu . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0002H  3
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0005H  1
  j. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0006H  1
  cmd. . . . . . . . . . . . . . . . .  AUTO     XDATA  ARRAY    0007H  200
pulse_state_menu . . . . . . . . . . .  PUBLIC   CODE   STRUCT   0066H  6
vawe_form. . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    008AH  24
welding_mod_sel_menu . . . . . . . . .  PUBLIC   CODE   STRUCT   0012H  6
MMUSIC . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  35
  IdNmu. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  32
  PlayTail . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0020H  1
  PlayHead . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0021H  1
  PlayInterrupt. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0022H  1
_mMUSIC. . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  35
  IdNmu. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  32
  PlayTail . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0020H  1
  PlayHead . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0021H  1
  PlayInterrupt. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0022H  1
flow_sensor_menu . . . . . . . . . . .  PUBLIC   CODE   STRUCT   00B4H  6
weld_button_mod. . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0018H  18
EIID_MMA . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
s32. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
u32. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
s16. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
u16. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
ICON_T . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  x. . . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
  y. . . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0002H  2
  id . . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0004H  2
EIID_TIG . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
vawe_form_menu . . . . . . . . . . . .  PUBLIC   CODE   STRUCT   00A2H  6
EIID_SIN . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
weld_button_mod_menu . . . . . . . . .  PUBLIC   CODE   STRUCT   002AH  6
prev_menu_item . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0004H  1
MENU_T . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  size . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  p_items. . . . . . . . . . . . . . .  MEMBER   -----  PTR      0001H  3
  func . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0004H  2
EIID_MIX . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EIID_DC_MINUS. . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
draw_sub_menu. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  array_of_menus . . . . . . . . . . .  AUTO     XDATA  ARRAY    0000H  21
polarity . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0030H  18
C51 COMPILER V9.53.0.0   TEMP                                                              10/31/2023 07:48:34 PAGE 14  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


MENU_ITEM_T. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  icon . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    532    ----
   CONSTANT SIZE    =    207    ----
   XDATA SIZE       =      5     232
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     48    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
